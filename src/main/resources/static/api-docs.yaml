openapi: 3.0.0
info:
  title: Price API
  description: API for managing product prices
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: prices
    description: Prices Controller
paths:
  /prices:
    get:
      tags:
        - prices
      summary: Get Prices
      description: Endpoint to get prices based on application date, product ID, and brand ID.
      parameters:
        - in: query
          name: applicationDate
          schema:
            type: string
            format: date-time
          description: Date and time of application in ISO 8601 format (YYYY-MM-DDTHH:MM:SS)
          required: true
        - in: query
          name: productId
          schema:
            type: integer
          description: ID of the product
          required: true
        - in: query
          name: brandId
          schema:
            type: integer
          description: ID of the brand
          required: true
      responses:
        '200':
          description: List of prices successfully obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Price'
    post:
      tags:
        - prices
      summary: Create Price
      description: Endpoint to create a new Price.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
    put:
      tags:
        - prices
      summary: Update Price
      description: Endpoint to update a Price.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Price'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
    delete:
      tags:
        - prices
      summary: Delete Price
      description: Endpoint to delete a Price by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the Price to delete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Deleted successfully
  /prices/{id}:
    get:
      tags:
        - prices
      summary: Get Price by ID
      description: Endpoint to retrieve a Price by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the Price to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Price'
components:
  schemas:
    Price:
      type: object
      properties:
        id:
          type: integer
        brandId:
          type: integer
        startDate:
          type: string
          format: date-time
          example: "2020-06-14T00:00:00"
        endDate:
          type: string
          format: date-time
          example: "2020-12-31T23:59:59"
        priceList:
          type: number
          example: 1
        productId:
          type: integer
          example: 35455
        priority:
          type: integer
          example: 0
        price:
          type: number
          example: 35.50
        curr:
          type: string
          example: EUR